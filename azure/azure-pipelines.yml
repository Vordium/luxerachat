trigger:
  - main

variables:
  imageRepository: estatewise/backend
  dockerfilePath: backend/Dockerfile
  tag: $(Build.SourceVersion)
  azureSubscription: $(AZURE_SUBSCRIPTION)
  resourceGroup: $(RESOURCE_GROUP)
  containerRegistry: $(CONTAINER_REGISTRY)
  dockerRegistryServiceConnection: $(DOCKER_REGISTRY_SERVICE_CONNECTION)
  appName: estatewise-backend
  cosmosAccount: $(COSMOS_ACCOUNT)
  storageAccount: $(STORAGE_ACCOUNT)
  appInsights: $(APP_INSIGHTS)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build and Push
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            displayName: Build and push image
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

  - stage: Deploy
    displayName: Deploy to Web App
    dependsOn: Build
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az webapp create \
                  --name $(appName) \
                  --resource-group $(resourceGroup) \
                  --plan $(appName)-plan \
                  --deployment-container-image-name $(containerRegistry)/$(imageRepository):$(tag)

                COSMOS_CONN=$(az cosmosdb keys list --name $(cosmosAccount) --resource-group $(resourceGroup) --type connection-strings --query connectionStrings[0].connectionString -o tsv)
                STORAGE_CONN=$(az storage account show-connection-string --name $(storageAccount) --resource-group $(resourceGroup) -o tsv)
                APPINSIGHTS_KEY=$(az monitor app-insights component show --app $(appInsights) --resource-group $(resourceGroup) --query instrumentationKey -o tsv)
                APPINSIGHTS_CONN=$(az monitor app-insights component show --app $(appInsights) --resource-group $(resourceGroup) --query connectionString -o tsv)

                az webapp config appsettings set \
                  --name $(appName) \
                  --resource-group $(resourceGroup) \
                  --settings MONGO_URI=$COSMOS_CONN AZURE_STORAGE_CONNECTION_STRING=$STORAGE_CONN APPINSIGHTS_INSTRUMENTATIONKEY=$APPINSIGHTS_KEY APPLICATIONINSIGHTS_CONNECTION_STRING=$APPINSIGHTS_CONN
